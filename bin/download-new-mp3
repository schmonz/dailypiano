#!/bin/sh

set -e
unset CDPATH

# Typical usage:
# 1. Run this script with no arguments
# 2. Copy (and then delete) any downloaded MP3 files into Music.app
# 3. Run this script with no arguments, again
# 4. Observe new web-named MP3 files in `audio/`
# 5. `git add audio && git commit -m 'Add latest music.' && git push`

#YOUTUBE_PLAYLIST='https://youtube.com/playlist?list=PLkuryjnRFclQJqoIVpk9W9-eIRswejo-R'
#LOCALMUSIC_DIRECTORY="${HOME}/Music/iTunes/iTunes Music/Schleier, Amitai/Daily Piano Miniatures"
YOUTUBE_PLAYLIST='https://www.youtube.com/playlist?list=PLkuryjnRFclTzNyap3TRgLtWxgQmbu5Am'
LOCALMUSIC_DIRECTORY="${HOME}/Music/iTunes/iTunes Music/Schleier, Amitai/Weekly Piano Miniatures"
WEB_RENAMER="$(pwd)/$(dirname $0)/flatten-name-for-web-mp3"
DESTINATION=audio

playlist_length() {
	yt-dlp \
		--flat-playlist \
		--dump-json \
		${YOUTUBE_PLAYLIST} \
	| jq .n_entries | sort -u
}

highest_local_tracknum() {
	ls "${LOCALMUSIC_DIRECTORY}" | sort -n | tail -1 | awk '{print $1}'
}

remote_for_local() {
	local _tracknum
	_tracknum="$1"; shift
	echo ${_tracknum}
}

download_remote_to_local() {
	local _playlist_max _local_tracknum _remote_tracknum
	_playlist_max="$1"; shift
	_local_tracknum="$1"; shift
	_remote_tracknum=$(remote_for_local ${_local_tracknum})

	[ ${_remote_tracknum} -gt ${_playlist_max} ] && return 77

	yt-dlp \
		--abort-on-error \
		--playlist-items ${_remote_tracknum} \
		-o "${_local_tracknum} %(title)s.%(ext)s" \
		--extract-audio \
		--audio-format mp3 \
		--embed-thumbnail \
		"${YOUTUBE_PLAYLIST}"
}

composer_lookup() {
	local _composer_surname
	_composer_surname="$1"; shift
	case "${_composer_surname}" in
		Alkan)		echo "Alkan, Charles-Valentin"		;;
		Bortkiewicz)	echo "Bortkevych, Serhiy Eduardovych"	;;
		Bowen)		echo "Bowen, York"			;;
		Brahms)		echo "Brahms, Johannes"			;;
		Catoire)	echo "Catoire, Georgy L'vovich"		;;
		Debussy)	echo "Debussy, Claude"			;;
		Grieg)		echo "Grieg, Edvard"			;;
		MacDowell)	echo "MacDowell, Edward"		;;
		Medtner)	echo "Medtner, Nikolai Karlovich"	;;
		Mompou)		echo "Mompou, Federico"			;;
		Mordasov)	echo "Mordasov, Nikolai"		;;
		Moszkowski)	echo "Moszkowski, Moritz"		;;
		Satie)		echo "Satie, Erik"			;;
		Schleier)	echo "Schleier, Amitai"			;;
		Schumann)	echo "Schumann, Robert"			;;
		Scriabin)	echo "Scriabin, Alexander Nikolayevich"	;;
		*)		echo >&2 "ERROR: add '${_composer_surname}'"
				exit 77					;;
	esac
}

tag_new_mp3() {
	local _filename _tracknum _composer_surname _composer_fullname
	_filename="$1"; shift
	_tracknum=$(echo "${_filename}" | awk '{print $1}')
	_composer_surname=$(echo "${_filename}" | awk '{print $2}')
	_composer_fullname=$(composer_lookup "${_composer_surname}")
	id3v2 \
		--track "${_tracknum}" \
		--TCOM "${_composer_fullname}" \
		--artist "Schleier, Amitai" \
		--album "Weekly Piano Miniatures" \
		--genre "32" \
		--year "2022" \
		"${_filename}"
}

copy_stably_from_music_app_to_subdirectory_for_web() {
	local _destination
	mkdir -p "${DESTINATION}"
	_destination=$(cd "${DESTINATION}" && pwd)

	(cd "${LOCALMUSIC_DIRECTORY}"
	for i in *.mp3; do
		[ "${i}" == '*.mp3' ] && break
		stable_web_filename=$(${WEB_RENAMER} "${i}")
		cp -a "${i}" "${_destination}/${stable_web_filename}"
	done)
}

main() {
	local _remote_maxindex _local_wanted
	if [ $# -eq 2 ]; then
		_local_wanted="$1"
		_remote_maxindex="$2"
	else
		_local_wanted=$(expr 1 + $(highest_local_tracknum))
		_remote_maxindex=$(playlist_length)
	fi

	while download_remote_to_local ${_remote_maxindex} ${_local_wanted}; do
		_local_wanted=$(expr 1 + ${_local_wanted})
	done

	for i in *.mp3; do
		[ "${i}" == '*.mp3' ] && break
		tag_new_mp3 "${i}"
	done

	copy_stably_from_music_app_to_subdirectory_for_web
}

main "$@"
exit $?
